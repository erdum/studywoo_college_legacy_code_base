{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","ui-component/extended/AnimateButton.js","utils/saveToken.js","views/pages/authentication/auth-forms/AuthLogin.js","ui-component/cards/AuthFooter.js","views/pages/authentication/authentication3/Login3.js"],"names":["AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","children","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","useScriptRef","scripted","useRef","useEffect","current","AnimateButton","forwardRef","ref","offset1","offset2","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","motion","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","saveToken","token","sessionStorage","setItem","err","URL","process","FirebaseLogin","others","useTheme","scriptedRef","useState","redirect","setRedirect","isLoading","setLoading","getToken","getData","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","login","values","a","fetch","method","headers","Accept","body","JSON","stringify","email","password","res","status","json","access_token","cacheData","user_data","permissions","window","location","reload","alert","console","log","Grid","container","justifyContent","spacing","initialValues","submit","validationSchema","Yup","shape","max","required","onSubmit","setErrors","setStatus","setSubmitting","success","error","message","errors","handleBlur","handleChange","handleSubmit","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","mt","Button","disableElevation","disabled","variant","color","CircularProgress","top","left","marginTop","marginLeft","to","AuthFooter","Stack","Typography","component","Link","href","target","underline","Login","matchDownSM","useMediaQuery","breakpoints","down","item","alignItems","m","mb","Logo","secondary","main","gutterBottom","fontSize","textAlign","AuthLogin","Divider","textDecoration"],"mappings":"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","file":"static/js/33.720c5101.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import { useEffect, useRef } from 'react';\n\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","export default function saveToken(token) {\n  try {\n    sessionStorage.setItem('accessToken', token);\n    return true;\n  } catch (err) {\n    return err;\n  }\n}","import {useEffect, useState} from 'react';\nimport {Navigate} from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// material-ui\nimport {useTheme} from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    CircularProgress,\n    FormControl,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport saveToken from 'utils/saveToken';\nimport getToken from 'utils/getToken';\nimport cacheData, {getData} from 'utils/cacheData';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n// ============================|| FIREBASE - LOGIN ||============================ //\n\nconst URL = `${process.env.REACT_APP_BASE_URL}/login`;\n\nconst FirebaseLogin = ({...others}) => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    const [redirect, setRedirect] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (getToken() && getData() && !redirect) {\n            setRedirect(true);\n        }\n    }, [redirect]);\n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const login = async (values) => {\n        try {\n            setLoading(true);\n            let res = await fetch(URL, {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json'\n                },\n                body: JSON.stringify({email: values.email, password: values.password})\n            });\n\n            setLoading(false);\n\n            if (res.status === 200) {\n                res = await res.json();\n                saveToken(res.access_token);\n                cacheData(res.user_data);\n                sessionStorage.setItem('permissions', JSON.stringify(res.permissions));\n                // setRedirect(true);\n                window.location.reload();\n            } else {\n                alert('Unexpected error ocurred!');\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                {/* <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"outlined\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100]\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\n                            </Box>\n                            Sign in with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\n                    </Box>\n                </Grid> */}\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({success: true});\n                            setSubmitting(false);\n                            login(values);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({success: false});\n                            setErrors({submit: err.message});\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)}\n                                     sx={{...theme.typography.customInput}}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{...theme.typography.customInput}}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        {/* <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                Forgot Password?\n                            </Typography>\n                        </Stack> */}\n                        {errors.submit && (\n                            <Box sx={{mt: 3}}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box sx={{mt: 2, position: 'relative'}}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isLoading}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign in\n                                </Button>\n                                {isLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        sx={{\n                                            position: 'absolute',\n                                            top: '50%',\n                                            left: '50%',\n                                            marginTop: '-12px',\n                                            marginLeft: '-12px'\n                                        }}\n                                    />\n                                )}\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n            {redirect ? <Navigate to=\"/admin/users\"/> : null}\n        </>\n    );\n};\n\nexport default FirebaseLogin;\n","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"mailto:erdumadnan@gmail.com\" target=\"_blank\" underline=\"hover\">\n            Adnan & Son IT Group Pakistan\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://colleg.studywoo.com\" target=\"_blank\" underline=\"hover\">\n            &copy; college.studywoo.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport AuthLogin from '../auth-forms/AuthLogin';\nimport Logo from 'ui-component/Logo';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ================================|| AUTH3 - LOGIN ||================================ //\n\nconst Login = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n  return (\n    <AuthWrapper1>\n      <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n        <Grid item xs={12}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n              <AuthCardWrapper>\n                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item sx={{ mb: 3 }}>\n                    <Link to=\"#\">\n                      <Logo />\n                    </Link>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction={matchDownSM ? 'column-reverse' : 'row'}\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Grid item>\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                          <Typography\n                            color={theme.palette.secondary.main}\n                            gutterBottom\n                            variant={matchDownSM ? 'h3' : 'h2'}\n                          >\n                            Hi, Welcome Back\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            fontSize=\"16px\"\n                            textAlign={matchDownSM ? 'center' : 'inherit'}\n                          >\n                            Enter your credentials to continue\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <AuthLogin />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                      <Typography\n                        component={Link}\n                        to=\"/login\"\n                        variant=\"subtitle1\"\n                        sx={{ textDecoration: 'none' }}\n                      >\n                        Don&apos;t have an account?\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n          <AuthFooter />\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}