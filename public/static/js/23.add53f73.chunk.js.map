{"version":3,"sources":["utils/uploadFiles.js","utils/getOptions.js","ui-component/ActionItem.js","utils/swapLabelWithValue.js","utils/random.js","utils/getRandomFileName.js","ui-component/Inputs.js","utils/findChanges.js","ui-component/Table.js","utils/crud.js","ui-component/MFCD.js","views/data/program-type.js"],"names":["uploadFiles","files","names","a","payload","FormData","i","length","extension","name","split","at","append","fetch","process","method","headers","getToken","body","status","getOptions","setOptions","url","query","rows","json","output","map","item","label","id","prevState","options","ListboxComponent","forwardRef","props","ref","children","role","other","itemCount","Array","isArray","height","width","rowHeight","overscanCount","rowCount","rowRenderer","cloneElement","index","style","InlineEditor","value","setValue","fieldName","useState","editorIsLoading","setEditorLoading","editorRef","useRef","Skeleton","animation","variant","apiKey","onInit","evt","editor","current","onEditorChange","text","init","mobile","menubar","toolbar_mode","theme","selector","convert_urls","plugins","toolbar","content_style","ActionItem","row","setFields","fields","searchTimer","isOpen","autocompleteData","setAutocompleteData","loading","useEffect","lazyLoad","clearTimeout","setTimeout","type","ListItem","disablePadding","sx","my","FormControlLabel","marginLeft","control","Checkbox","onChange","e","field","target","checked","labelPlacement","TextField","event","helperText","headerName","inputProps","multiple","Autocomplete","defaultValue","open","onOpen","onClose","_event","selectedValues","filter","opt","swapLabelWithValue","onInputChange","renderInput","params","InputProps","endAdornment","CircularProgress","color","size","InputLabelProps","shrink","display","flexDirection","alignItems","Typography","mb","ml","fullWidth","random","chars","str","charAt","Math","floor","getRandomFileName","list","from","fileNames","forEach","push","Inputs","submit","columns","closePage","CustomInput","customInputProps","lock","setLock","initialValue","List","justifyContent","Button","disabled","backgroundColor","position","onClick","data","obj1","obj2","list1","Object","keys","list2","result","key","findChanges","isUpdate","top","left","marginTop","DataTable","dataHandler","paginate","rowsState","setRowsState","deleteHandler","editHandler","edit","destroy","selection","serverFiltering","filterModelChangeHandler","CustomToolbar","getData","roles","getActions","icon","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","components","Toolbar","pagination","count","paginationMode","onPageChange","page","prev","onPageSizeChange","filterMode","onFilterModelChange","createPayload","selectedRows","entries","createRows","tableRow","column","createRecord","callback","reqMethod","Authorization","Accept","JSON","stringify","alert","paginateRows","res","readRecord","URL","newRows","rowsCount","deleteRecord","rowsToBeEffected","MFCD","title","create","compRef","isMounted","prevPage","setSelectedRows","showData","setShowData","filterValue","setFilterValue","isFilterRunning","setFilterRunning","filterValInititalRender","active","ifFilesUploadThem","dataObject","filesNeedsToBeUpload","handleSubmit","submittedData","setBtnLock","console","log","handleEdit","includes","handleDelete","window","confirm","handleFilterChange","useCallback","filterModel","undefined","items","Grid","container","direction","spacing","gridSpacing","xs","ids","ProgramType"],"mappings":"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","file":"static/js/23.add53f73.chunk.js","sourcesContent":["import getToken from './getToken';\n\nexport default async function uploadFiles(files, names) {\n\tconst payload = new FormData();\n\tfor (let i = 0; i < files.length; i+=1) {\n\t\tconst extension = files[i].name.split('.').at(-1);\n\t\tpayload.append(`file${i}`, files[i], `${names[i]}.${extension}`);\n\t}\n\tconst res = await fetch(`${process.env.REACT_APP_BASE_URL}/file`, {\n\t\tmethod: 'post',\n\t\theaders: {\n\t\t\t'Authorization': `Bearer ${getToken()}`\n\t\t},\n\t\tbody: payload\n\t});\n\tif (res.status === 200) {\n\t\treturn true;\n\t}\n\treturn null;\n}\n","export default async function getOptions(setOptions, url, query = '') {\n\tlet rows;\n\tlet output;\n\n\ttry {\n\t\trows = await fetch(`${process.env.REACT_APP_BASE_URL}${url}?text=${query}`);\n\t\tif (rows.status === 200) {\n\t\t\trows = await rows.json();\n\t\t} else {\n\t\t\trows = null;\n\t\t}\n\t} catch (err) {\n\t\treturn err;\n\t}\n\n\tif (rows) {\n\t\toutput = rows.map((item) => ({ label: item[0], id: item[1] }));\n\t\tsetOptions((prevState) => ({ ...prevState, options: output }));\n\t} else {\n\t\tsetOptions((prevState) => ({ ...prevState, options: [] }));\n\t}\n\treturn null;\n}\n","import { useState, useEffect, forwardRef, cloneElement, useRef } from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Checkbox from '@mui/material/Checkbox';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Skeleton from '@mui/material/Skeleton';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { List as ListV } from 'react-virtualized';\nimport getOptions from 'utils/getOptions';\nimport swapLabelWithValue from 'utils/swapLabelWithValue';\n\nconst ListboxComponent = forwardRef((props, ref) => {\n\tconst { children, role, ...other } = props;\n\tconst itemCount = Array.isArray(children) ? children.length : 0;\n\n\treturn (\n\t\t<div ref={ref}>\n\t\t\t<div {...other}>\n\t\t\t\t<ListV\n\t\t\t\t\theight={250}\n\t\t\t\t\twidth={300}\n\t\t\t\t\trowHeight={100}\n\t\t\t\t\toverscanCount={5}\n\t\t\t\t\trowCount={itemCount}\n\t\t\t\t\trowRenderer={(props) =>\n\t\t\t\t\t\tcloneElement(children[props.index], {\n\t\t\t\t\t\t\tstyle: props.style\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\trole={role}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nconst InlineEditor = ({ value, setValue, fieldName }) => {\n\tconst [editorIsLoading, setEditorLoading] = useState(true);\n\tconst editorRef = useRef(null);\n\n\treturn (\n\t\t<>\n\t\t\t{editorIsLoading && <Skeleton animation=\"wave\" variant=\"rectangular\" width=\"100%\" height={100} />}\n\t\t\t<Editor\n\t\t\t\tapiKey={process.env.REACT_APP_TINYMCE_API_KEY}\n\t\t\t\tonInit={(evt, editor) => {\n\t\t\t\t\tsetEditorLoading(false);\n\t\t\t\t\teditorRef.current = editor;\n\t\t\t\t}}\n\t\t\t\tonEditorChange={(text) => {\n\t\t\t\t\tsetValue((prevState) => ({ ...prevState, [fieldName]: text }));\n\t\t\t\t}}\n\t\t\t\tvalue={value}\n\t\t\t\tinit={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tmobile: {\n\t\t\t\t\t\tmenubar: true,\n\t\t\t\t\t\ttoolbar_mode: 'sliding',\n\t\t\t\t\t\ttheme: 'mobile'\n\t\t\t\t\t},\n\t\t\t\t\tselector: 'textarea#image-tools',\n\t\t\t\t\theight: 500,\n\t\t\t\t\tconvert_urls: false,\n\t\t\t\t\tplugins: [\n\t\t\t\t\t\t'advlist autolink lists link image charmap print preview anchor',\n\t\t\t\t\t\t'searchreplace visualblocks code fullscreen',\n\t\t\t\t\t\t'insertdatetime media table paste imagetools wordcount'\n\t\t\t\t\t],\n\t\t\t\t\ttoolbar:\n\t\t\t\t\t\t'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',\n\t\t\t\t\tcontent_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n\t\t\t\t}}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default function ActionItem({ row, setFields, fields }) {\n\tconst searchTimer = useRef(null);\n\tconst [autocompleteData, setAutocompleteData] = useState({\n\t\tisOpen: false,\n\t\toptions: [],\n\t\turl: '',\n\t\tlabel: ''\n\t});\n\tconst loading = autocompleteData.isOpen && autocompleteData.options.length === 0;\n\n\tuseEffect(() => {\n\t\tif (loading) getOptions(setAutocompleteData, autocompleteData.url);\n\t}, [loading, autocompleteData.url]);\n\n\tuseEffect(() => {\n\t\tif (row.options) {\n\t\t\tif (typeof row.options === 'string') setAutocompleteData((prevState) => ({ ...prevState, url: row.options }));\n\t\t\tif (typeof row.options === 'object') setAutocompleteData((prevState) => ({ ...prevState, options: row.options }));\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [autocompleteData.isOpen]);\n\n\tuseEffect(() => {\n\t\tif (autocompleteData.label.length > 0 && row.lazyLoad) {\n\t\t\tsetAutocompleteData((prevState) => ({ ...prevState, isOpen: true }));\n\t\t\tif (searchTimer.current) clearTimeout(searchTimer.current);\n\t\t\tsearchTimer.current = setTimeout(() => {\n\t\t\t\tgetOptions(setAutocompleteData, autocompleteData.url, autocompleteData.label);\n\t\t\t}, 1200);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [autocompleteData.label]);\n\n\tif (row.type === 'boolean') {\n\t\treturn (\n\t\t\t<ListItem disablePadding sx={{ my: 2 }}>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tsx={{ marginLeft: 1 }}\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetFields((prevState) => ({ ...prevState, [row.field]: e.target.checked }));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel={row.field}\n\t\t\t\t\tlabelPlacement=\"end\"\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t);\n\t}\n\n\tif (row.type === 'file') {\n\t\treturn (\n\t\t\t<ListItem disablePadding sx={{ my: 2 }}>\n\t\t\t\t<TextField\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tsetFields((prevState) => ({ ...prevState, [row.field]: event.target.files }));\n\t\t\t\t\t}}\n\t\t\t\t\tid={row.field}\n\t\t\t\t\thelperText={row.headerName}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tinputProps={{ multiple: row?.multiple ?? true }}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t);\n\t}\n\n\tif (row.type === 'search') {\n\t\treturn (\n\t\t\t<ListItem disablePadding sx={{ my: 2 }}>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tdefaultValue={fields?.[row.field]}\n\t\t\t\t\tmultiple={row.multiple}\n\t\t\t\t\tsx={{ width: '100%' }}\n\t\t\t\t\topen={autocompleteData.isOpen}\n\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\tif (!row.lazyLoad || autocompleteData.options.length > 0)\n\t\t\t\t\t\tsetAutocompleteData((prevState) => ({ ...prevState, isOpen: true }));\n\t\t\t\t\t}}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetAutocompleteData((prevState) => ({ ...prevState, isOpen: false }));\n\t\t\t\t\t}}\n\t\t\t\t\toptions={autocompleteData.options}\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tonChange={(_event, value) => {\n\t\t\t\t\t\tif (!row.multiple) setFields((prevState) => ({ ...prevState, [row.field]: value?.id }));\n\t\t\t\t\t\tif (row.multiple) {\n\t\t\t\t\t\t\tconst selectedValues = value.map((item) => swapLabelWithValue(item, autocompleteData.options));\n\t\t\t\t\t\t\tsetFields((prevState) => ({ ...prevState, [row.field]: selectedValues }));\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tonInputChange={(_event, value) => {\n\t\t\t\t\t\tsetAutocompleteData((prevState) => ({ ...prevState, label: value }));\n\t\t\t\t\t}}\n\t\t\t\t\tListboxComponent={ListboxComponent}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tlabel={row.headerName}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t);\n\t}\n\n\tif (row.type === 'date') {\n\t\treturn (\n\t\t\t<ListItem disablePadding sx={{ my: 2 }}>\n\t\t\t\t<TextField\n\t\t\t\t\tlabel={row.headerName}\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tvalue={fields?.[row.field] ?? ''}\n\t\t\t\t\tonChange={(e) => setFields((prevState) => ({ ...prevState, [row.field]: e.target.value }))}\n\t\t\t\t\tsx={{ width: 220 }}\n\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\tshrink: true\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t);\n\t}\n\n\tif (row.type === 'freeText') {\n\t\treturn (\n\t\t\t<ListItem disablePadding sx={{ my: 2, display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n\t\t\t<Typography variant=\"h4\" sx={{ color: 'gray', mb: 2, ml: 1.5 }}>{row.headerName}</Typography>\n\t\t\t\t<InlineEditor value={fields?.[row.field]} setValue={setFields} fieldName={row.field} />\n\t\t\t</ListItem>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ListItem disablePadding sx={{ my: 2 }}>\n\t\t\t<TextField\n\t\t\t\tfullWidth\n\t\t\t\tvalue={fields?.[row.field] ?? ''}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetFields((prevState) => ({ ...prevState, [row.field]: e.target.value }));\n\t\t\t\t}}\n\t\t\t\tlabel={row.headerName}\n\t\t\t\ttype=\"text\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t/>\n\t\t</ListItem>\n\t);\n}\n","export default function swapLabelWithValue(item, options) {\n\tif (typeof item === 'object') return item?.id;\n\n\tif (typeof item === 'string' && options && options.length > 0) {\n\t\tconst [ { id } ] = options.filter((opt) => (opt.label === item));\n\t\treturn id;\n\t}\n\treturn null\n};","const random = (length = 8) => {\n    // Declare all characters\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    // Pick characers randomly\n    let str = '';\n    for (let i = 0; i < length; i+=1) {\n        str += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n\n    return str;\n\n};\n\nexport default random;","import random from './random';\n\nexport default function getRandomFileName(files) {\n\tconst list = Array.from(files);\n\tconst fileNames = [];\n\tlist.forEach(() => {\n\t\tconst name = random(20);\n\t\tfileNames.push(`${name}`);\n\t});\n\treturn fileNames;\n}","import {useRef, useState} from 'react';\nimport List from '@mui/material/List';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ActionItem from 'ui-component/ActionItem';\nimport findChanges from 'utils/findChanges';\n\nexport default function Inputs({\n\t                               submit,\n\t                               columns,\n\t                               fields,\n\t                               setFields,\n\t                               closePage,\n\t                               CustomInput = null,\n\t                               customInputProps = null\n                               }) {\n\tconst [lock, setLock] = useState(false);\n\tconst initialValue = useRef(fields);\n\n\tconst handleSubmit = () => {\n\t\tsetLock(true);\n\t\tconst data = initialValue.current ? findChanges(initialValue.current, fields) : fields;\n\t\tif (fields.isUpdate) submit({...data, isUpdate: true}, setLock);\n\t\tif (!fields.isUpdate) submit({...data, isUpdate: false}, setLock);\n\t};\n\n\treturn (<>\n\t\t<List>\n\t\t\t{columns.map((row) => {\n\t\t\t\tif (row.field === 'custom') {\n\t\t\t\t\treturn <CustomInput key=\"customInput\" {...customInputProps} row={fields}/>;\n\t\t\t\t}\n\n\t\t\t\tif (row.field !== 'id' && !row.lock) {\n\t\t\t\t\treturn <ActionItem key={row.field} row={row} setFields={setFields} fields={fields}/>;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})}\n\t\t</List>\n\t\t<div style={{width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\n\t\t\t<Button\n\t\t\t\tdisabled={lock}\n\t\t\t\tsx={{\n\t\t\t\t\tcolor: 'secondary.dark',\n\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tmy: 2,\n\t\t\t\t\t'&:hover': {backgroundColor: 'secondary.dark', color: 'white'}\n\t\t\t\t}}\n\t\t\t\tonClick={handleSubmit}\n\t\t\t>\n\t\t\t\tSave\n\t\t\t\t{lock && (<CircularProgress\n\t\t\t\t\tsize={24}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tposition: 'absolute', top: '50%', left: '50%', marginTop: '-12px', marginLeft: '-12px'\n\t\t\t\t\t}}\n\t\t\t\t/>)}\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tsx={{\n\t\t\t\t\tmy: 2,\n\t\t\t\t\tcolor: 'secondary.dark',\n\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t'&:hover': {backgroundColor: 'secondary.dark', color: 'white'}\n\t\t\t\t}}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetFields(null);\n\t\t\t\t\tclosePage();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tCancel\n\t\t\t</Button>\n\t\t</div>\n\t</>);\n}\n","export default function findChanges(obj1, obj2) {\n\tconst list1 = Object.keys(obj1);\n\tconst list2 = obj2;\n\tconst result = {};\n\n\tif (list1.length === 0 && list2.length === 0) return null;\n\n\tlist1.map((key) => {\n\t\tif (obj1[key] !== obj2[key]) result[key] = list2[key];\n\t\treturn false;\n\t});\n\n\treturn result;\n}\n","import {\n\tDataGrid,\n\tGridActionsCellItem,\n\tGridToolbarColumnsButton,\n\tGridToolbarContainer,\n\tGridToolbarExport,\n\tGridToolbarFilterButton\n} from '@mui/x-data-grid';\nimport {getData} from 'utils/cacheData';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './table.css';\n\nfunction DataTable({\n\t                   columns,\n\t                   rows,\n\t                   dataHandler,\n\t                   paginate,\n\t                   rowsState,\n\t                   setRowsState,\n\t                   deleteHandler,\n\t                   editHandler,\n\t                   edit,\n\t                   destroy,\n\t                   selection,\n\t                   serverFiltering,\n\t                   filterModelChangeHandler = null\n                   }) {\n\tconst renderActions = (params) => {\n\t\tconst result = [];\n\t\tif (edit) result.push(<GridActionsCellItem icon={<EditIcon/>} label=\"Edit\"\n\t\t                                           onClick={() => editHandler(params)}/>);\n\t\tif (destroy) result.push(<GridActionsCellItem icon={<DeleteIcon/>} label=\"Delete\"\n\t\t                                              onClick={() => deleteHandler(params)}/>);\n\t\treturn result;\n\t};\n\n\tfunction CustomToolbar() {\n\t\treturn (\n\t\t\t<GridToolbarContainer>\n\t\t\t\t<GridToolbarColumnsButton/>\n\t\t\t\t<GridToolbarFilterButton/>\n\t\t\t\t{getData()?.roles === 'Admin' && <GridToolbarExport/>}\n\t\t\t</GridToolbarContainer>\n\t\t);\n\t}\n\n\tcolumns = [\n\t\t{\n\t\t\tfield: 'actions',\n\t\t\ttype: 'actions',\n\t\t\twidth: 80,\n\t\t\tgetActions: renderActions\n\t\t},\n\t\t...columns\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t{paginate ? (\n\t\t\t\t<div style={{height: 600, width: '100%'}}>\n\t\t\t\t\t<DataGrid\n\t\t\t\t\t\tsx={{backgroundColor: 'white'}}\n\t\t\t\t\t\trows={rows}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tpageSize={rowsState.pageSize}\n\t\t\t\t\t\trowsPerPageOptions={[rowsState.pageSize]}\n\t\t\t\t\t\tcheckboxSelection={selection}\n\t\t\t\t\t\tonSelectionModelChange={dataHandler}\n\t\t\t\t\t\tcomponents={{\n\t\t\t\t\t\t\tToolbar: CustomToolbar\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tpagination\n\t\t\t\t\t\trowCount={rowsState.count}\n\t\t\t\t\t\t{...rowsState}\n\t\t\t\t\t\tpaginationMode=\"server\"\n\t\t\t\t\t\tonPageChange={(page) => setRowsState((prev) => ({...prev, page}))}\n\t\t\t\t\t\tonPageSizeChange={(pageSize) => setRowsState((prev) => ({...prev, pageSize}))}\n\t\t\t\t\t\tfilterMode={serverFiltering ? 'server' : 'client'}\n\t\t\t\t\t\tonFilterModelChange={serverFiltering ? filterModelChangeHandler : null}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div style={{height: 600, width: '100%'}}>\n\t\t\t\t\t<DataGrid\n\t\t\t\t\t\tsx={{backgroundColor: 'white'}}\n\t\t\t\t\t\trows={rows}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tloading={rowsState.loading}\n\t\t\t\t\t\tpageSize={rowsState.pageSize}\n\t\t\t\t\t\trowsPerPageOptions={[rowsState.pageSize]}\n\t\t\t\t\t\tcheckboxSelection={selection}\n\t\t\t\t\t\tonSelectionModelChange={dataHandler}\n\t\t\t\t\t\tcomponents={{\n\t\t\t\t\t\t\tToolbar: CustomToolbar\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tfilterMode={serverFiltering ? 'server' : 'client'}\n\t\t\t\t\t\tonFilterModelChange={serverFiltering ? filterModelChangeHandler : null}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default DataTable;\n","import getToken from './getToken';\n\nconst createPayload = (data, selectedRows = null) => {\n\tconst payload = {};\n\tObject.entries(data).forEach((item) => {\n\t\tpayload[item[0]] = item[1];\n\t});\n\tif (selectedRows) {\n\t\tpayload.rows = selectedRows;\n\t}\n\treturn payload;\n};\n\nconst createRows = (row, columns) => {\n\tconst tableRow = {};\n\tcolumns.forEach((column) => {\n\t\tif (column.type === 'boolean' && (row[column.field] === '0' || row[column.field] === '' || row[column.field] === 0)) {\n\t\t\ttableRow[column.field] = false;\n\t\t} else {\n\t\t\ttableRow[column.field] = row[column.field];\n\t\t}\n\t});\n\treturn tableRow;\n};\n\nconst createRecord = async (url, data, columns, selectedRows, callback = null) => {\n\tlet payload;\n\tlet reqMethod = 'post';\n\tif (data.isUpdate) {\n\t\treqMethod = 'put';\n\t\tpayload = createPayload(data, selectedRows);\n\t} else {\n\t\tpayload = createPayload(data);\n\t}\n\tconst res = await fetch(url, {\n\t\tmethod: reqMethod,\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${getToken()}`,\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAccept: 'application/json'\n\t\t},\n\t\tbody: JSON.stringify(payload)\n\t});\n\n\tif (res.status !== 200) alert('Unexpected error ocurred!');\n\tcallback();\n};\n\nconst paginateRows = async (url, page) => {\n\tlet res = await fetch(`${url}?page=${page}`, {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${getToken()}`\n\t\t}\n\t});\n\tif (res.status === 200) {\n\t\tres = await res.json();\n\t} else {\n\t\tres = [[], 0];\n\t}\n\treturn res;\n};\n\nconst readRecord = async (URL, columns, setRowsState, rowsState = null, paginate = false) => {\n\tif (!paginate) {\n\t\tlet res = await fetch(URL, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${getToken()}`,\n\t\t\t\tAccept: 'application/json'\n\t\t\t}\n\t\t});\n\t\tif (res.status === 200) {\n\t\t\tres = await res.json();\n\t\t\tconst rows = res.map((row) => createRows(row, columns));\n\t\t\tsetRowsState((prevState) => ({ ...prevState, rows }));\n\t\t}\n\n\t\tsetRowsState((prevState) => ({ ...prevState, loading: false }));\n\t\treturn true;\n\t}\n\n\tconst [newRows, rowsCount] = await paginateRows(URL, rowsState.page);\n\tsetRowsState((prev) => ({ ...prev, loading: false, rows: newRows, count: rowsCount }));\n\treturn true;\n};\n\nconst deleteRecord = async (url, selectedRows, callback = null) => {\n\tconst rowsToBeEffected = selectedRows;\n\tconst res = await fetch(url, {\n\t\tmethod: 'delete',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${getToken()}`,\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAccept: 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ rows: rowsToBeEffected })\n\t});\n\n\tif (res.status !== 200) alert('Unexpected error ocurred!');\n\tcallback();\n};\n\nexport { createRecord, readRecord, deleteRecord, createRows };\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Inputs from 'ui-component/Inputs';\nimport DataTable from 'ui-component/Table';\nimport {gridSpacing} from 'store/constant';\nimport {createRecord, deleteRecord, readRecord} from 'utils/crud';\nimport uploadFiles from 'utils/uploadFiles';\nimport getRandomFileName from 'utils/getRandomFileName';\n\nexport default function MFCD({\n\t                             columns,\n\t                             url,\n\t                             title,\n\t                             paginate = false,\n\t                             CustomInput = null,\n\t                             customInputProps = null,\n\t                             create = true,\n\t                             edit = true,\n\t                             destroy = true,\n\t                             selection = true,\n\t                             serverFiltering = false\n                             }) {\n\tconst compRef = useRef({\n\t\tisMounted: false,\n\t\tprevPage: 0\n\t});\n\tconst [fields, setFields] = useState(null);\n\tconst [selectedRows, setSelectedRows] = useState(null);\n\tconst [showData, setShowData] = useState(true);\n\tconst [rowsState, setRowsState] = useState({\n\t\tpage: 0,\n\t\tpageSize: 50,\n\t\trows: [],\n\t\tloading: true,\n\t\tcount: 0,\n\t\tpaginate\n\t});\n\tconst [filterValue, setFilterValue] = useState();\n\tconst [isFilterRunning, setFilterRunning] = useState(false);\n\tconst filterValInititalRender = useRef(true);\n\n\tuseEffect(() => {\n\t\tif (compRef.current.isMounted) {\n\t\t\tif (rowsState.paginate && !rowsState.loading && compRef.current.prevPage !== rowsState.page) {\n\t\t\t\tcompRef.current.prevPage = rowsState.page;\n\t\t\t\tsetRowsState((prevState) => ({...prevState, loading: true}));\n\t\t\t} else if (rowsState.loading && !isFilterRunning) {\n\t\t\t\treadRecord(url, columns, setRowsState, rowsState, rowsState.paginate);\n\t\t\t}\n\t\t} else {\n\t\t\tcompRef.current.isMounted = true;\n\t\t\t// Initial Fetch\n\t\t\treadRecord(url, columns, setRowsState, rowsState, rowsState.paginate);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [rowsState.page, rowsState.paginate, rowsState.loading, isFilterRunning]);\n\n\tuseEffect(() => {\n\t\tlet active = true;\n\n\t\tif (filterValInititalRender.current) {\n\t\t\tfilterValInititalRender.current = false\n\t\t\treturn undefined;\n\t\t}\n\n\t\t(async () => {\n\t\t\tsetFilterRunning(true);\n\t\t\tsetRowsState((prevState) => ({...prevState, paginate: false, loading: true}));\n\n\t\t\tif (!active) return;\n\t\t\tawait readRecord(`${url}?q=${filterValue}`, columns, setRowsState);\n\t\t})();\n\n\t\treturn () => {\n\t\t\tactive = false;\n\t\t}\n\t}, [filterValue, columns, url]);\n\n\tconst dataHandler = (ids) => {\n\t\tsetSelectedRows(ids);\n\t\tif (ids.length > 0) {\n\t\t\tconst initialValue = rowsState.rows.filter((item) => item.id === ids[0]);\n\t\t\tsetFields(initialValue[0]);\n\t\t}\n\t};\n\n\tconst ifFilesUploadThem = async (dataObject, callback) => {\n\t\tconst filesNeedsToBeUpload = {files: [], names: []};\n\t\tconst list = Object.entries(columns);\n\t\ttry {\n\t\t\t// eslint-disable-next-line\n\t\t\tlist.forEach(async ([_, item]) => {\n\t\t\t\tif (item.type === 'file' && dataObject[item.field]) {\n\t\t\t\t\tconst fileNames = getRandomFileName(dataObject[item.field]);\n\t\t\t\t\tfilesNeedsToBeUpload.files.push(...Array.from(dataObject[item.field]));\n\t\t\t\t\tfilesNeedsToBeUpload.names.push(...fileNames);\n\t\t\t\t\tdataObject[item.field] = fileNames;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (filesNeedsToBeUpload.files.length > 0) {\n\t\t\t\tconst filesUploaded = await uploadFiles(filesNeedsToBeUpload.files, filesNeedsToBeUpload.names);\n\t\t\t\tif (filesUploaded) callback();\n\t\t\t} else {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t} catch {\n\t\t\talert('Failed to upload files');\n\t\t}\n\t};\n\n\tconst handleSubmit = async (submittedData, setBtnLock) => {\n\t\tconsole.log(submittedData);\n\t\tif (Object.entries(submittedData).length <= 1) return alert('All fields are required');\n\n\t\tifFilesUploadThem(submittedData, () => {\n\t\t\tcreateRecord(url, submittedData, columns, selectedRows, () => {\n\t\t\t\tsetBtnLock(false);\n\t\t\t\tsetRowsState((prevState) => ({...prevState, loading: true}));\n\t\t\t\tsetShowData(true);\n\t\t\t});\n\t\t});\n\n\t\treturn true;\n\t};\n\n\tconst handleEdit = async (params) => {\n\t\tsetFields((prevState) => ({...prevState, ...params.row}));\n\t\tlet rows = [];\n\n\t\tif (selectedRows === null || !selectedRows.includes(params.id)) {\n\t\t\trows.push(params.id);\n\t\t} else {\n\t\t\trows = [...selectedRows];\n\t\t}\n\n\t\tsetSelectedRows(rows);\n\n\t\tsetFields((prevState) => ({...prevState, isUpdate: true}));\n\t\tsetShowData(false);\n\t};\n\n\tconst handleDelete = async (params) => {\n\t\tif (!window.confirm('Confirm Delete!')) return false;\n\t\tlet rows = [];\n\n\t\tif (selectedRows === null || !selectedRows.includes(params.id)) {\n\t\t\trows.push(params.id);\n\t\t} else {\n\t\t\trows = [...selectedRows];\n\t\t}\n\n\t\tdeleteRecord(url, rows, () => {\n\t\t\tsetRowsState((prevState) => ({...prevState, loading: true}));\n\t\t\tsetShowData(true);\n\t\t});\n\t\treturn true;\n\t};\n\n\tconst handleFilterChange = useCallback((filterModel) => {\n\t\tif (isFilterRunning && filterModel.items[0].value === undefined) {\n\t\t\tsetFilterRunning(false);\n\t\t\tsetRowsState((prevState) => ({...prevState, paginate, loading: true}));\n\t\t}\n\n\t\tif (filterModel.items[0].value) {\n\t\t\tsetFilterValue(filterModel.items[0].value);\n\t\t}\n\t}, [isFilterRunning, paginate]);\n\n\treturn (\n\t\t<>\n\t\t\t<Grid container direction=\"column\" spacing={gridSpacing}>\n\t\t\t\t<Grid item container justifyContent=\"space-between\" xs={12}>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tcolor: 'secondary.main'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"h1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{create && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFields(null);\n\t\t\t\t\t\t\t\tsetShowData(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tbackgroundColor: 'secondary.main',\n\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\t'&:hover': {\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'secondary.light',\n\t\t\t\t\t\t\t\t\tcolor: 'secondary.main'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate New {title}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t{showData ? (\n\t\t\t\t\t\t<DataTable\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\trows={rowsState.rows}\n\t\t\t\t\t\t\tdataHandler={dataHandler}\n\t\t\t\t\t\t\tpaginate={rowsState.paginate}\n\t\t\t\t\t\t\trowsState={rowsState}\n\t\t\t\t\t\t\tsetRowsState={setRowsState}\n\t\t\t\t\t\t\tdeleteHandler={handleDelete}\n\t\t\t\t\t\t\teditHandler={handleEdit}\n\t\t\t\t\t\t\tedit={edit}\n\t\t\t\t\t\t\tdestroy={destroy}\n\t\t\t\t\t\t\tselection={selection}\n\t\t\t\t\t\t\tserverFiltering={serverFiltering}\n\t\t\t\t\t\t\tfilterModelChangeHandler={handleFilterChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Inputs\n\t\t\t\t\t\t\tsubmit={handleSubmit}\n\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\tfields={fields}\n\t\t\t\t\t\t\tsetFields={setFields}\n\t\t\t\t\t\t\tclosePage={() => setShowData(true)}\n\t\t\t\t\t\t\tCustomInput={CustomInput}\n\t\t\t\t\t\t\tcustomInputProps={customInputProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t);\n}\n","import MFCD from 'ui-component/MFCD';\n\nconst columns = [\n\t{ field: 'id', headerName: 'ID', width: 100 },\n\t{ field: 'name', headerName: 'Name', width: 220 },\n\t{ field: 'slug', headerName: 'Slug', width: 220 }\n];\n\nconst URL = `${process.env.REACT_APP_BASE_URL}/data/program-type`;\n\nexport default function ProgramType() {\n\treturn <MFCD columns={columns} url={URL} title=\"Program Types\" />;\n}\n"],"sourceRoot":""}